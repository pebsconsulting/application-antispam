<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.2" reference="AntiSpam.WebHome" locale="">
  <web>AntiSpam</web>
  <name>WebHome</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1453936309000</creationDate>
  <parent>Main.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1454147497000</date>
  <contentUpdateDate>1454147497000</contentUpdateDate>
  <version>1.1</version>
  <title>Delete Spam User and Pages</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity}}
{{html}}
&lt;form class="xform"&gt;
  &lt;div&gt;&lt;input type="text" name="query" placeholder="Search..." value="$!request.query"/&gt;&lt;/div&gt;
  &lt;div&gt;&lt;input type="text" name="user" placeholder="User..." /&gt;&lt;/div&gt;
  &lt;div&gt;
    &lt;span class="buttonwrapper"&gt;&lt;input type="submit" name="search" value="Search" class="button"/&gt;&lt;/span&gt;
    &lt;span class="buttonwrapper"&gt;&lt;input type="submit" name="showas" value="Show Activity Stream" class="button"/&gt;&lt;/span&gt;
    #if ("$!request.query" != '')
      &lt;span class="buttonwrapper"&gt;&lt;input type="submit" name="delete" value="Delete" class="button"/&gt;&lt;/span&gt;
    #end
    #if ("$!request.delete" != '')
      &lt;input class="btn btn-danger" type="submit" name="confirmDelete" value="Confirm Delete" class="button btn-danger"/&gt;
    #end
  &lt;/div&gt;
&lt;/form&gt;
{{/html}}

#if ("$!request.query" == '' || "$!request.showas" != '')
  == Latest Changes ==
  #set ($events = $xwiki.activitystream.getEvents(false, 50, 0))
  #foreach ($event in $events)
    * {{{$event.getDisplayDate() - $event.getPage() - $event.getType() - $event.getUser()}}}
  #end
#end
#set ($cleanedReferences = $collectionstool.set)
#if ("$!request.query" != '')
  == Matching Pages ==
  #set ($result = $services.antispam.getMatchingDocuments($request.query, 500, 0))
  #set ($matchingDocumentReferences = $result.getLeft())
  #set ($matchingAuthorReferences = $result.getRight())
  #foreach ($matchingDocumentReference in $matchingDocumentReferences)
    * {{{$matchingDocumentReference}}}
    #if ("$!request.confirmDelete" != '')
      #set ($discard = $services.antispam.cleanDocument($matchingDocumentReference, $matchingAuthorReferences, true))
      ** Cleaned!
    #end
    #set ($discard = $cleanedReferences.add($matchingDocumentReference))
  #end
  == Authors ==
  #foreach ($matchingAuthorReference in $matchingAuthorReferences)
    * {{{$matchingAuthorReference}}}
    #if ("$!request.confirmDelete" != '')
      #set ($userDoc = $xwiki.getDocument($matchingAuthorReference))
      #if (!$userDoc.isNew())
        #set ($discard = $xwiki.getXWiki().deleteAllDocuments($userDoc.getDocument(), false, $xcontext.getContext()))
        ** Deleted!
      #else
        ** Page already deleted! 
      #end
    #end
  #end
  == Pages created or modified by those Authors ==
  #foreach ($matchingAuthorReference in $matchingAuthorReferences)
    #set ($documentReferences = $services.antispam.getDocumentsForAuthor($matchingAuthorReference, 500, 0))
    #foreach ($documentReference in $documentReferences)
      ## Only handle pages that were not matching above as those have already been taken care of!
      #if (!$cleanedReferences.contains($documentReference))
        * {{{$documentReference}}}
        #if ("$!request.confirmDelete" != '')
          #set ($discard = $services.antispam.cleanDocument($documentReference, $matchingAuthorReferences, true))
          ** Cleaned!
        #end
      #end
    #end
  #end
  == Activity Stream Events ==
  #foreach ($matchingAuthorReference in $matchingAuthorReferences)
    #set ($events = $xwiki.activitystream.getEventsForUser($services.model.serialize($matchingAuthorReference, 'default'), false, 500, 0))
    #foreach ($event in $events)
      * {{{$event.getDisplayDate() - $event.getPage() - $event.getType() - $event.getUser()}}}
    #end
    #if ("$!request.confirmDelete" != '')
      #set ($discard = $xwiki.activitystream.deleteActivityEvents($events))
      ** All events deleted for user $matchingAuthorReference
    #end
  #end
#end
#if ("$!request.user" != '')
  == Page modified by user: [$request.user] ==
  #set ($userReference = $services.model.resolveDocument($request.user, 'user'))
  #set ($documentReferences = $services.antispam.getDocumentsForAuthor($userReference, 500, 0))
  #foreach ($documentReference in $documentReferences)
    ## Only handle pages that were not matching above as those have already been taken care of!
    #if (!$cleanedReferences.contains($documentReference))
      * {{{$documentReference}}}
      #if ("$!request.confirmDelete" != '')
        #set ($discard = $services.antispam.cleanDocument($documentReference, [$userReference], true))
        ** Cleaned!
      #end
    #end
  #end
#end
{{/velocity}}</content>
</xwikidoc>
